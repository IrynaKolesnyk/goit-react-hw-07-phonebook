{"version":3,"sources":["components/ContactForm/ContactFormStyled.jsx","redux/phoneBook/phoneBookActions.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","App.js","redux/phoneBook/phoneBookReducer.jsx","redux/phoneBook/rootReducer.jsx","redux/store.jsx","index.js"],"names":["ContactFormStyled","styled","div","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","filter","storageContact","ContactForm","state","nameId","phoneId","handelInputChange","event","target","value","setState","handelFormSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","onSubmit","className","this","type","pattern","title","required","onChange","autoComplete","Component","connect","items","dispatch","contactsActions","ContactListStyled","ul","getVisibleContacts","allContacts","normalizedFilter","includes","onDeleteContact","map","onClick","FilterStyled","App","createReducer","actions","action","_","combineReducers","rootReducer","phoneBookReducer","store","configureStore","reducer","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SA2CeA,EAzCWC,IAAOC,IAAV,k8B,OCyBR,GAAEC,WAxBEC,YAAa,iBAAiB,SAACC,EAAMC,GACtD,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAmBuBI,cAdPN,YAAa,oBAAoB,SAAAI,GACrD,MAAO,CACLD,QAASC,MAY+BG,aARvBP,YAAa,0BAA0B,SAAAQ,GAC1D,MAAO,CACLL,QAASK,MAM6CC,eAFnCT,YAAa,6B,OCnB9BU,E,4MACJC,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAGVU,OAASP,c,EACTQ,QAAUR,c,EAEVS,kBAAoB,SAAAC,GAClB,MAAwBA,EAAMC,OAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBjB,EAAOgB,K,EAG1BE,iBAAmB,SAAAJ,GACjBA,EAAMK,iBACN,MAAyB,EAAKT,MAAtBV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAKd,GAJqB,EAAKmB,MAAlBC,SACsBC,MAC5B,SAAAC,GAAO,OAAIA,EAAQvB,KAAKwB,gBAAkBxB,EAAKwB,iBAG/C,OAAOC,MAAM,YAAD,OAAazB,EAAb,qBAEd,EAAKoB,MAAMM,SAAS1B,EAAMC,GAC1B,EAAKgB,SAAS,CAAEjB,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,cAAC,EAAD,UACE,uBAAM0B,UAAU,gBAAgBD,SAAUE,KAAKV,iBAA/C,UACE,wBAAOS,UAAU,aAAjB,iBAEE,uBACEA,UAAU,aACVE,KAAK,OACL7B,KAAK,OACLgB,MAAOY,KAAKlB,MAAMV,KAClB8B,QAAQ,yHACRC,MAAM,iJACNC,UAAQ,EACRC,SAAUL,KAAKf,kBACfqB,aAAa,WAGjB,wBAAOP,UAAU,aAAaxB,GAAIyB,KAAKhB,QAAvC,mBAEE,uBACEe,UAAU,aACVE,KAAK,MACL7B,KAAK,SACLgB,MAAOY,KAAKlB,MAAMT,OAClB6B,QAAQ,yFACRC,MAAM,yGACNC,UAAQ,EACR7B,GAAIyB,KAAKhB,QACTqB,SAAUL,KAAKf,kBACfqB,aAAa,WAIjB,wBAAQP,UAAU,SAASE,KAAK,SAAhC,kC,GA9DgBM,aAgFXC,eATS,SAAA1B,GAAK,MAAK,CAChCW,SAAUX,EAAMW,SAASgB,UAGA,SAAAC,GAAQ,MAAK,CACtCZ,SAAU,SAAC1B,EAAMC,GAAP,OACRqC,EAASC,EAAgBzC,WAAWE,EAAMC,QAG/BmC,CAA6C3B,GC9C7C+B,EAtCW5C,IAAO6C,GAAV,6uBC2BjBC,EAAqB,SAACC,EAAapC,GACvC,IAAMqC,EAAmBrC,EAAOiB,cAChC,OAAOmB,EAAYpC,QAAO,SAAAgB,GAAO,OAC/BA,EAAQvB,KAAKwB,cAAcqB,SAASD,OAczBR,eAVS,SAAA1B,GACtB,MAAO,CACLW,SAAUqB,EAAmBhC,EAAMW,SAASgB,MAAO3B,EAAMW,SAASd,YAI3C,SAAA+B,GAAQ,MAAK,CACtCQ,gBAAiB,SAAA3C,GAAE,OAAImC,EAASC,EAAgBlC,cAAcF,QAGjDiC,EAzCK,SAAC,GAAmC,IAAjCf,EAAgC,EAAhCA,SAAUyB,EAAsB,EAAtBA,gBAC/B,OACE,cAAC,EAAD,UACGzB,EAAS0B,KAAI,SAAAxB,GACZ,IAAQpB,EAAqBoB,EAArBpB,GAAIH,EAAiBuB,EAAjBvB,KAAMC,EAAWsB,EAAXtB,OAElB,OACE,qBAAI0B,UAAU,OAAd,UACE,oBAAGA,UAAU,OAAb,UAAqB3B,EAArB,OACA,mBAAG2B,UAAU,SAAb,SAAuB1B,IACvB,wBACE0B,UAAU,SACVE,KAAK,SACLmB,QAAS,kBAAMF,EAAgB3C,IAHjC,sBAHwBA,WCSrB8C,EAnBMrD,IAAOC,IAAV,uWCkCHuC,eARS,SAAA1B,GAAK,MAAK,CAChCM,MAAON,EAAMW,SAASd,WAGG,SAAA+B,GAAQ,MAAK,CACtCL,SAAU,SAAAnB,GAAK,OAAIwB,EAASC,EAAgBjC,aAAaQ,EAAMC,OAAOC,YAGzDoB,EA/BA,SAAC,GAA0B,IAAxB7B,EAAuB,EAAvBA,OAAQ0B,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIN,UAAU,QAAd,oCACA,+BACE,gCACE,uBACEE,KAAK,OACL7B,KAAK,OACLgB,MAAOT,EACPuB,QAAQ,yHACRC,MAAM,iJACNC,UAAQ,EACRC,SAAUA,EACVN,UAAU,cACVO,aAAa,kBCbnBgB,E,4MACJxC,MAAQ,G,4CAgBR,WACE,OACE,sBAAKiB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAxBUQ,aAsCHC,eARS,SAAC1B,GAAD,MAAY,CAClCW,SAAUX,EAAMW,SAASgB,SAOZD,CAAyBc,G,+BC1ClCb,EAAQc,YAAc,IAAD,mBACxBC,EAAQtD,YAAa,SAACY,EAAO2C,GAAR,OAAoBA,EAAOnD,SAA3B,mBAAuCQ,OADpC,cAExB0C,EAAQ/C,eAAgB,SAACK,EAAO2C,GAAR,OACvB3C,EAAMH,QAAO,qBAAGJ,KAAgBkD,EAAOnD,cAHhB,IAMrBK,EAAS4C,YAAc,GAAD,eACzBC,EAAQ9C,cAAe,SAACgD,EAAGD,GAAJ,OAAeA,EAAOnD,YAGjCqD,cAAgB,CAC7BlB,QACA9B,WCRaiD,EAJKD,YAAgB,CAClClC,SAAUoC,ICDNC,EAAQC,YAAe,CAC3BC,QAASJ,IAGXK,YAAaH,GAEEA,QCCfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINO,SAASC,eAAe,W","file":"static/js/main.92396635.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContactFormStyled = styled.div`\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  .form-label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    color: #6b7b96;\r\n  }\r\n  .form-input {\r\n    display: block;\r\n    padding: 5px;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    color: #636161;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    box-shadow: 1px 1px 2px 0 #12bcb0;\r\n    border: 1px solid #dbd9d9;\r\n  }\r\n  .addBtn {\r\n    margin-top: 20px;\r\n    padding: 5px;\r\n    background-color: transparent;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 1px 1px 2px 0 #0b2349;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactFormStyled;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('phoneBook/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('phoneBook/delete', id => {\r\n  return {\r\n    payload: id,\r\n  };\r\n});\r\n\r\nconst changeFilter = createAction('phoneBook/changeFilter', filter => {\r\n  return {\r\n    payload: filter,\r\n  };\r\n});\r\n\r\nconst storageContact = createAction('phoneBook/storageContact');\r\n\r\nexport default { addContact, deleteContact, changeFilter, storageContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactFormStyled from './ContactFormStyled';\r\nimport contactsActions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameId = uuidv4();\r\n  phoneId = uuidv4();\r\n\r\n  handelInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    const existContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (existContact) {\r\n      return alert(`Contact \"${name}\" already exists`);\r\n    }\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactFormStyled>\r\n        <form className=\"contacts-form\" onSubmit={this.handelFormSubmit}>\r\n          <label className=\"form-label\">\r\n            Name\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name can only contains letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n              required\r\n              onChange={this.handelInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className=\"form-label\" id={this.phoneId}>\r\n            Number\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number can only contains digits (min 8 digits), spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              id={this.phoneId}\r\n              onChange={this.handelInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <button className=\"addBtn\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactForm);\r\n","import styled from 'styled-components';\r\n\r\nconst ContactListStyled = styled.ul`\r\n  margin-top: 30px;\r\n  .item {\r\n    &:not(:last-child) {\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n  p {\r\n    display: inline-block;\r\n    margin-right: 20px;\r\n  }\r\n  .name {\r\n    color: #052f74;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n  }\r\n  .number {\r\n    color: #202733;\r\n    font-weight: 600;\r\n    font-size: 17px;\r\n  }\r\n  .delBtn {\r\n    display: block;\r\n    margin-left: auto;\r\n    padding: 5px;\r\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 1px 1px 3px 0 #fc0202;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactListStyled;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactListStyled from './ContactListStyled';\r\nimport contactsActions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(contact => {\r\n        const { id, name, number } = contact;\r\n\r\n        return (\r\n          <li className=\"item\" key={id}>\r\n            <p className=\"name\">{name}:</p>\r\n            <p className=\"number\">{number}</p>\r\n            <button\r\n              className=\"delBtn\"\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapstateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactList);\r\n","import styled from 'styled-components';\r\n\r\nconst FilterStyled = styled.div`\r\n  text-align: center;\r\n  .title {\r\n    color: #6b7b96;\r\n    margin-bottom: 10px;\r\n  }\r\n  .finde-input {\r\n    display: block;\r\n    padding: 5px;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    color: #636161;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    box-shadow: 1px 1px 2px 0 #12bcb0;\r\n    border: 1px solid #dbd9d9;\r\n  }\r\n`;\r\nexport default FilterStyled;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FilterStyled from './FilterStyled';\r\nimport contactsActions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <h3 className=\"title\">Finde contacts by name</h3>\r\n      <form>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filter}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name can only contains letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n            required\r\n            onChange={onChange}\r\n            className=\"finde-input\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n      </form>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapstateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport action from \"./redux/phoneBook/phoneBookActions\";\n\nclass App extends Component {\n  state = {};\n\n  // componentDidMount() {\n  //   const contactsStorage = localStorage.getItem('contacts');\n  //   if (contactsStorage) {\n  //     this.props.storageContact(JSON.parse(contactsStorage));\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   const { contacts } = this.props;\n  //   if (prevProps.contacts !== contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\n// const mapDispatchToProps = {\n//   storageContact: action.storageContact,\n// };\n\nexport default connect(mapStateToProps)(App);\n\n// , mapDispatchToProps\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phoneBookActions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [action.payload, ...state],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookReducer from \"./phoneBookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// записываем данные в local storage с помощью persist\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import phoneBookReducer from \"./phoneBookReducer\";\r\n// import { persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const configuration = {\r\n//   key: \"contacts\",\r\n//   storage: storage,\r\n//   whitelist: [\"items\", \"filter\"],\r\n// };\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(configuration, phoneBookReducer),\r\n// });\r\n\r\n// export default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./phoneBook/rootReducer\";\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import phoneBookReducer from \"./phoneBook/phoneBookReducer\";\r\n\r\n// const store = configureStore({\r\n//   reducer: { contacts: phoneBookReducer },\r\n//   // devTools: process.env.NODE_ENV === 'development',\r\n//   // devTools: process.env.NODE_ENV === 'production',\r\n// });\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/store\";\n// import { PersistGate } from 'redux-persist/es/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//persistor={store.persistor}\n"],"sourceRoot":""}